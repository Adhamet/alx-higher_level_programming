doctest for 2-matrix_divided.py
===============================

importing function
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

checking for module docstring:
        >>> m = __import__("2-matrix_divided").__doc__
        >>> len(m) > 1
        True

checking for function docstring:
        >>> f = __import__("2-matrix_divided").matrix_divided.__doc__
        >>> len(f) > 1
        True

testing function with division of single digit div
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

testing function with division of double digit div
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 22)
    [[0.05, 0.09, 0.14], [0.18, 0.23, 0.27]]

testing function with division of negative div
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], -2)
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

testing function with division of zero div
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

testing function with scalar division with string div
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "2")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

testing function with division of list div
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], [2])
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

testing function with division of tuple div
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], (2,))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

testing function with division of dict div
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], {2: 2})
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

testing function with division of float div
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2.0)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

testing how function handles None argument
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

testing how function handles None matrix
    >>> matrix_divided(None, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

testing how function handles non-list matrix
    >>> matrix_divided(2, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided("2", 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided((2,), 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided({2: 2}, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
