test cases for print_square
===========================

import the function
    >>> print_square = __import__('4-print_square').print_square

Checking for module docstring
    >>> print(len(__import__('4-print_square').__doc__) >= 1)
    True

test no args
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'

test with args
    >>> print_square(4)
    ####
    ####
    ####
    ####

test passing None:
    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

test positive integers
    >>> print_square(1)
    #
    >>> print_square(2)
    ##
    ##
    >>> print_square(5)
    #####
    #####
    #####
    #####
    #####

test negative integers
    >>> print_square(-1)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

test floats
    >>> print_square(1.5)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

test strings
    >>> print_square("hello")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

test lists
    >>> print_square([1, 2, 3])
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

test tuples
    >>> print_square((1, 2, 3))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

test dicts
    >>> print_square({"a": 1, "b": 2})
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer
